C51 COMPILER V9.01   SNAKE                                                                 10/12/2018 21:10:36 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SNAKE
OBJECT MODULE PLACED IN snake.OBJ
COMPILER INVOKED BY: F:\Keil5\C51\BIN\C51.EXE snake.c LARGE ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TAB
                    -S(2)

line level    source

   1          #include "Snake.h"
   2          #include "Picture.h"
   3          #include "interruption.h"
   4          sbit Key1=P2^1;//上
   5          sbit Key2=P2^0;//左
   6          sbit Key3=P3^2;//右
   7          sbit Key4=P3^3;//下
   8          extern int timer;
   9          
  10           
  11          int seed=0;
  12          int time=0;
  13          
  14          short len=1; 
  15          
  16          char x=1;
  17          char y=1;
  18          
  19          short ch =0;
  20          
  21          int snake_x [20]={1};
  22          int snake_y [20]={1};
  23          
  24          
  25          short food_x=4;
  26          short food_y=4;
  27          
  28          
  29          short flag_x_go=1;
  30          short flag_x_bank=0;
  31          short flag_y_go=0;
  32          short flag_y_bank=0; 
  33          
  34          short timea=0;
  35          void My_Snake()
  36          {
  37   1            DrawPoint(food_x,food_y);
  38   1            snake_run();
  39   1            snake_nature();
  40   1           if(live_or_die())
  41   1            {
  42   2               flag_x_go=1;
  43   2               flag_x_bank=0;
  44   2               flag_y_go=0;
  45   2               flag_y_bank=0; 
  46   2               x=1;
  47   2               y=1;
  48   2               len=1;
  49   2               ch=0;
  50   2               snake_x[0]=1;
  51   2               snake_y[0]=1;
  52   2            }
  53   1      }
  54          
C51 COMPILER V9.01   SNAKE                                                                 10/12/2018 21:10:36 PAGE 2   

  55          //获得蛇的食物
  56          void foods()
  57          {
  58   1          int i=0;
  59   1          srand(seed);
  60   1          food_x=rand()%8+1;
  61   1          food_y=rand()%8+1;
  62   1          DrawPoint(food_x,food_y);
  63   1        for(i=0;i<len;i++)
  64   1        {
  65   2            if((food_x==snake_x[i])&&(food_y==snake_y[i]))
  66   2            {
  67   3              food_x=rand()%8+1;
  68   3              food_y=rand()%8+1;
  69   3              i=-1;
  70   3            }
  71   2        }
  72   1      } 
  73          
  74          //判断蛇是否死亡
  75          int live_or_die()
  76          {
  77   1         short i=0;
  78   1         if(len>5)
  79   1         {
  80   2         for(i=0;i<len-1;i++)
  81   2         {
  82   3            if(((x==snake_x[i])&&(y==snake_y[i])))
  83   3            {
  84   4             return 1;
  85   4            }
  86   3         }
  87   2         }
  88   1         if(x==0||x==9||y==0||y==9)
  89   1         {
  90   2             return 1;
  91   2         }
  92   1         return 0;
  93   1      } 
  94          
  95          //蛇的属性
  96          void snake_nature()
  97          {
  98   1         int a=0;
  99   1         for(a=len-1;a>=0;a--)
 100   1         {
 101   2            DrawPoint(snake_x[a],snake_y[a]);
 102   2         }
 103   1      }
 104          
 105          //让蛇自己运动
 106          void snake_run()
 107          {
 108   1           int a=0;
 109   1           Get_flag();
 110   1           if(time>=700)
 111   1           {
 112   2           if(flag_x_go==1)
 113   2           {
 114   3            x+=1;
 115   3           }
 116   2           if(flag_x_bank==1)
C51 COMPILER V9.01   SNAKE                                                                 10/12/2018 21:10:36 PAGE 3   

 117   2           {
 118   3            x-=1;
 119   3           }
 120   2           if(flag_y_go==1)
 121   2           {
 122   3            y+=1;
 123   3           }
 124   2           if(flag_y_bank==1)
 125   2           {
 126   3            y-=1;
 127   3           }
 128   2           if((x==food_x)&&(y==food_y))
 129   2           {
 130   3            len++;
 131   3            foods();
 132   3            snake_x[len-1]=x;
 133   3            snake_y[len-1]=y;
 134   3           }
 135   2           else
 136   2           {
 137   3             snake_x[len]=x;
 138   3             snake_y[len]=y;
 139   3             for(a=0;a<len;a++)
 140   3             {
 141   4              snake_x[a]=snake_x[a+1];
 142   4              snake_y[a]=snake_y[a+1];
 143   4             }  
 144   3           }
 145   2           time=0;
 146   2          }
 147   1      
 148   1      } 
 149          
 150          void Get_flag()
 151          {
 152   1         if(Key1==0)
 153   1         {
 154   2           delay(1000);
 155   2           if(Key1==0)
 156   2           {
 157   3             ch=80;
 158   3           }
 159   2           while(!Key1);
 160   2         }else
 161   1         if(Key2==0)
 162   1         {
 163   2           delay(1000);
 164   2           if(Key2==0)
 165   2           {
 166   3             ch=77;  
 167   3           } 
 168   2            while(!Key2);    
 169   2         }else
 170   1         if(Key4==0)
 171   1         {
 172   2           delay(1000);
 173   2           if(Key4==0)
 174   2           {
 175   3              ch=72;   
 176   3           } 
 177   2           while(!Key4);
 178   2         }else
C51 COMPILER V9.01   SNAKE                                                                 10/12/2018 21:10:36 PAGE 4   

 179   1         if(Key3==0)
 180   1         {
 181   2            delay(1000);
 182   2           if(Key3==0)
 183   2           {
 184   3            ch=75; 
 185   3           }
 186   2           while(!Key3);
 187   2         }
 188   1       switch (ch)
 189   1         {
 190   2           case 72:
 191   2               if(flag_x_go==1||flag_x_bank==1)
 192   2                {
 193   3                   flag_x_go=0;
 194   3                   flag_x_bank=0;
 195   3                   flag_y_go=0;
 196   3                   flag_y_bank=1;
 197   3                }break;
 198   2      
 199   2            case 80:
 200   2               if(flag_x_go==1||flag_x_bank==1)
 201   2                {
 202   3                   flag_x_go=0;
 203   3                   flag_x_bank=0;
 204   3                   flag_y_go=1;
 205   3                   flag_y_bank=0;
 206   3                }break;
 207   2                 
 208   2             case 75:
 209   2               if(flag_y_go==1||flag_y_bank==1)
 210   2                {
 211   3                   flag_x_go=0;
 212   3                   flag_x_bank=1;
 213   3                   flag_y_go=0;
 214   3                   flag_y_bank=0;
 215   3                 }break;
 216   2               
 217   2             case 77:
 218   2                if(flag_y_go==1||flag_y_bank==1)
 219   2                 {
 220   3                   flag_x_go=1;
 221   3                   flag_x_bank=0;
 222   3                   flag_y_go=0;
 223   3                   flag_y_bank=0;
 224   3                 }break;
 225   2                 
 226   2             default:
 227   2                  break;
 228   2         }
 229   1      }
 230          //定时器0的定时器中断
 231          void timer0() interrupt 1
 232          {  
 233   1        static int i=0;
 234   1        TH0=(65536-1000)/256; 
 235   1        i++;
 236   1        time++;
 237   1        timer--;
 238   1        if(timer<=0)
 239   1        {
 240   2           timer=0;
C51 COMPILER V9.01   SNAKE                                                                 10/12/2018 21:10:36 PAGE 5   

 241   2        }
 242   1        if(i>=100)
 243   1        {
 244   2           seed++;
 245   2           i=0;
 246   2           if(seed>2000)
 247   2           {
 248   3              seed=0;
 249   3           }
 250   2        }
 251   1      }
 252          
 253          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1449    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    106       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
