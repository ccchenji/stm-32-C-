C51 COMPILER V9.01   LCD1602                                                               02/25/2017 12:04:40 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN LCD1602.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD1602.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <LCD1602.h>
   2          /*******************************************************************************
   3          * 函 数 名         : Lcd1602_Delay1ms
   4          * 函数功能                 : 延时函数，延时1ms
   5          * 输    入         : c
   6          * 输    出         : 无
   7          * 说    名         : 该函数是在12MHZ晶振下，12分频单片机的延时。
   8          *******************************************************************************/
   9          
  10          void Lcd1602_Delay1ms(uint c)   //误差 0us
  11          {
  12   1          uchar a,b;
  13   1              for (; c>0; c--)
  14   1              {
  15   2                       for (b=199;b>0;b--)
  16   2                       {
  17   3                              for(a=1;a>0;a--);
  18   3                       }      
  19   2              }
  20   1              
  21   1      }
  22          
  23          /*******************************************************************************
  24          * 函 数 名         : LcdWriteCom
  25          * 函数功能                 : 向LCD写入一个字节的命令
  26          * 输    入         : com
  27          * 输    出         : 无
  28          *******************************************************************************/
  29          #ifndef         LCD1602_4PINS    //当没有定义这个LCD1602_4PINS时
  30          void LcdWriteCom(uchar com)       //写入命令
  31          {
  32   1              LCD1602_E = 0;     //使能
  33   1              LCD1602_RS = 0;    //选择发送命令
  34   1              LCD1602_RW = 0;    //选择写入
  35   1              
  36   1              LCD1602_DATAPINS = com;     //放入命令
  37   1              Lcd1602_Delay1ms(1);            //等待数据稳定
  38   1      
  39   1              LCD1602_E = 1;            //写入时序
  40   1              Lcd1602_Delay1ms(5);      //保持时间
  41   1              LCD1602_E = 0;
  42   1      }
  43          #else 
              void LcdWriteCom(uchar com)       //写入命令
              {
                      LCD1602_E = 0;   //使能清零
                      LCD1602_RS = 0;  //选择写入命令
                      LCD1602_RW = 0;  //选择写入
              
                      LCD1602_DATAPINS = com; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
                      Lcd1602_Delay1ms(1);
              
                      LCD1602_E = 1;   //写入时序
                      Lcd1602_Delay1ms(5);
                      LCD1602_E = 0;
C51 COMPILER V9.01   LCD1602                                                               02/25/2017 12:04:40 PAGE 2   

              
                      LCD1602_DATAPINS = com << 4; //发送低四位
                      Lcd1602_Delay1ms(1);
              
                      LCD1602_E = 1;   //写入时序
                      Lcd1602_Delay1ms(5);
                      LCD1602_E = 0;
              }
              #endif
  65          /*******************************************************************************
  66          * 函 数 名         : LcdWriteData
  67          * 函数功能                 : 向LCD写入一个字节的数据
  68          * 输    入         : dat
  69          * 输    出         : 无
  70          *******************************************************************************/                   
  71          #ifndef         LCD1602_4PINS              
  72          void LcdWriteData(uchar dat)                    //写入数据
  73          {
  74   1              LCD1602_E = 0;  //使能清零
  75   1              LCD1602_RS = 1; //选择输入数据
  76   1              LCD1602_RW = 0; //选择写入
  77   1      
  78   1              LCD1602_DATAPINS = dat; //写入数据
  79   1              Lcd1602_Delay1ms(1);
  80   1      
  81   1              LCD1602_E = 1;   //写入时序
  82   1              Lcd1602_Delay1ms(5);   //保持时间
  83   1              LCD1602_E = 0;
  84   1      }
  85          #else
              void LcdWriteData(uchar dat)                    //写入数据
              {
                      LCD1602_E = 0;    //使能清零
                      LCD1602_RS = 1;   //选择写入数据
                      LCD1602_RW = 0;   //选择写入
              
                      LCD1602_DATAPINS = dat; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
                      Lcd1602_Delay1ms(1);
              
                      LCD1602_E = 1;    //写入时序
                      Lcd1602_Delay1ms(5);
                      LCD1602_E = 0;
              
                      LCD1602_DATAPINS = dat << 4; //写入低四位
                      Lcd1602_Delay1ms(1);
              
                      LCD1602_E = 1;    //写入时序
                      Lcd1602_Delay1ms(5);
                      LCD1602_E = 0;
              }
              #endif
 107          /*******************************************************************************
 108          * 函 数 名       : LcdInit()
 109          * 函数功能               : 初始化LCD屏
 110          * 输    入       : 无
 111          * 输    出       : 无
 112          *******************************************************************************/                   
 113          #ifndef         LCD1602_4PINS
 114          void LcdInit()                                            //LCD初始化子程序
 115          {
 116   1              LcdWriteCom(0x38);  //开显示
 117   1              LcdWriteCom(0x0c);  //开显示不显示光标
C51 COMPILER V9.01   LCD1602                                                               02/25/2017 12:04:40 PAGE 3   

 118   1              LcdWriteCom(0x06);  //写一个指针加1
 119   1              LcdWriteCom(0x01);  //清屏
 120   1              LcdWriteCom(0x80);  //设置数据指针起点
 121   1      }
 122          #else
              void LcdInit()                                            //LCD初始化子程序
              {
                      LcdWriteCom(0x32);       //将8位总线转为4位总线
                      LcdWriteCom(0x28);       //在四位线下的初始化
                      LcdWriteCom(0x0c);  //开显示不显示光标
                      LcdWriteCom(0x06);  //写一个指针加1
                      LcdWriteCom(0x01);  //清屏
                      LcdWriteCom(0x80);  //设置数据指针起点
              }
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     87    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
