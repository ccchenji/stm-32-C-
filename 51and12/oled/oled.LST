C51 COMPILER V9.01   OLED                                                                  03/14/2017 14:55:49 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE oled.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "oled.h"
   2          //#include "stdlib.h"
   3          #include "oledfont.h"    
   4          //#include "delay.h"
   5          //OLED的显存
   6          //存放格式如下.
   7          //[0]0 1 2 3 ... 127    
   8          //[1]0 1 2 3 ... 127    
   9          //[2]0 1 2 3 ... 127    
  10          //[3]0 1 2 3 ... 127    
  11          //[4]0 1 2 3 ... 127    
  12          //[5]0 1 2 3 ... 127    
  13          //[6]0 1 2 3 ... 127    
  14          //[7]0 1 2 3 ... 127                       
  15          //void delay_ms(unsigned int ms)
  16          //{                         
  17          //      unsigned int a;
  18          //      while(ms)
  19          //      {
  20          //              a=1800;
  21          //              while(a--);
  22          //              ms--;
  23          //      }
  24          //      return;
  25          //}
  26          /**********************************************
  27          //IIC Start
  28          **********************************************/
  29          void IIC_Start()
  30          {
  31   1      
  32   1              OLED_SCLK_Set() ;
  33   1              OLED_SDIN_Set();
  34   1              OLED_SDIN_Clr();
  35   1              OLED_SCLK_Clr();
  36   1      }
  37          
  38          /**********************************************
  39          //IIC Stop
  40          **********************************************/
  41          void IIC_Stop()
  42          {
  43   1      OLED_SCLK_Set() ;
  44   1      //      OLED_SCLK_Clr();
  45   1              OLED_SDIN_Clr();
  46   1              OLED_SDIN_Set();
  47   1              
  48   1      }
  49          
  50          void IIC_Wait_Ack()
  51          {
  52   1      
  53   1              //GPIOB->CRH &= 0XFFF0FFFF;     //设置PB12为上拉输入模式
  54   1              //GPIOB->CRH |= 0x00080000;
  55   1      //      OLED_SDA = 1;
C51 COMPILER V9.01   OLED                                                                  03/14/2017 14:55:49 PAGE 2   

  56   1      //      delay_us(1);
  57   1              //OLED_SCL = 1;
  58   1              //delay_us(50000);
  59   1      /*      while(1)
  60   1              {
  61   1                      if(!OLED_SDA)                           //判断是否接收到OLED 应答信号
  62   1                      {
  63   1                              //GPIOB->CRH &= 0XFFF0FFFF;     //设置PB12为通用推免输出模式
  64   1                              //GPIOB->CRH |= 0x00030000;
  65   1                              return;
  66   1                      }
  67   1              }
  68   1      */
  69   1              OLED_SCLK_Set() ;
  70   1              OLED_SCLK_Clr();
  71   1      }
  72          /**********************************************
  73          // IIC Write byte
  74          **********************************************/
  75          
  76          void Write_IIC_Byte(unsigned char IIC_Byte)
  77          {
  78   1              unsigned char i;
  79   1              unsigned char m,da;
  80   1              da=IIC_Byte;
  81   1              OLED_SCLK_Clr();
  82   1              for(i=0;i<8;i++)                
  83   1              {
  84   2                              m=da;
  85   2                      //      OLED_SCLK_Clr();
  86   2                      m=m&0x80;
  87   2                      if(m==0x80)
  88   2                      {OLED_SDIN_Set();}
  89   2                      else OLED_SDIN_Clr();
  90   2                              da=da<<1;
  91   2                      OLED_SCLK_Set();
  92   2                      OLED_SCLK_Clr();
  93   2                      }
  94   1      
  95   1      
  96   1      }
  97          /**********************************************
  98          // IIC Write Command
  99          **********************************************/
 100          void Write_IIC_Command(unsigned char IIC_Command)
 101          {
 102   1         IIC_Start();
 103   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 104   1              IIC_Wait_Ack(); 
 105   1         Write_IIC_Byte(0x00);                        //write command
 106   1              IIC_Wait_Ack(); 
 107   1         Write_IIC_Byte(IIC_Command); 
 108   1              IIC_Wait_Ack(); 
 109   1         IIC_Stop();
 110   1      }
 111          /**********************************************
 112          // IIC Write Data
 113          **********************************************/
 114          void Write_IIC_Data(unsigned char IIC_Data)
 115          {
 116   1         IIC_Start();
 117   1         Write_IIC_Byte(0x78);                        //D/C#=0; R/W#=0
C51 COMPILER V9.01   OLED                                                                  03/14/2017 14:55:49 PAGE 3   

 118   1              IIC_Wait_Ack(); 
 119   1         Write_IIC_Byte(0x40);                        //write data
 120   1              IIC_Wait_Ack(); 
 121   1         Write_IIC_Byte(IIC_Data);
 122   1              IIC_Wait_Ack(); 
 123   1         IIC_Stop();
 124   1      }
 125          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 126          {
 127   1              if(cmd)
 128   1                              {
 129   2      
 130   2         Write_IIC_Data(dat);
 131   2         
 132   2                      }
 133   1              else {
 134   2         Write_IIC_Command(dat);
 135   2                      
 136   2              }
 137   1      
 138   1      
 139   1      }
 140          
 141          /********************************************
 142          // fill_Picture
 143          ********************************************/
 144          void fill_picture(unsigned char fill_Data)
 145          {
 146   1              unsigned char m,n;
 147   1              for(m=0;m<8;m++)
 148   1              {
 149   2                      OLED_WR_Byte(0xb0+m,0);         //page0-page1
 150   2                      OLED_WR_Byte(0x00,0);           //low column start address
 151   2                      OLED_WR_Byte(0x10,0);           //high column start address
 152   2                      for(n=0;n<128;n++)
 153   2                              {
 154   3                                      OLED_WR_Byte(fill_Data,1);
 155   3                              }
 156   2              }
 157   1      }
 158          
 159          
 160          /***********************Delay****************************************/
 161          void Delay_50ms(unsigned int Del_50ms)
 162          {
 163   1              unsigned int m;
 164   1              for(;Del_50ms>0;Del_50ms--)
 165   1                      for(m=6245;m>0;m--);
 166   1      }
 167          
 168          void Delay_1ms(unsigned int Del_1ms)
 169          {
 170   1              unsigned char j;
 171   1              while(Del_1ms--)
 172   1              {       
 173   2                      for(j=0;j<123;j++);
 174   2              }
 175   1      }
 176          
 177          //坐标设置
 178          
 179                  void OLED_Set_Pos(unsigned char x, unsigned char y) 
C51 COMPILER V9.01   OLED                                                                  03/14/2017 14:55:49 PAGE 4   

 180          {       OLED_WR_Byte(0xb0+y,OLED_CMD);
 181   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 182   1              OLED_WR_Byte((x&0x0f),OLED_CMD); 
 183   1      }         
 184          //开启OLED显示    
 185          void OLED_Display_On(void)
 186          {
 187   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 188   1              OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 189   1              OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 190   1      }
 191          //关闭OLED显示     
 192          void OLED_Display_Off(void)
 193          {
 194   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 195   1              OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 196   1              OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 197   1      }                                        
 198          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!        
 199          void OLED_Clear(void)  
 200          {  
 201   1              u8 i,n;             
 202   1              for(i=0;i<8;i++)  
 203   1              {  
 204   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 205   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 206   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 207   2                      for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 208   2              } //更新显示
 209   1      }
 210          void OLED_On(void)  
 211          {  
 212   1              u8 i,n;             
 213   1              for(i=0;i<8;i++)  
 214   1              {  
 215   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 216   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 217   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 218   2                      for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 219   2              } //更新显示
 220   1      }
 221          //在指定位置显示一个字符,包括部分字符
 222          //x:0~127
 223          //y:0~63
 224          //mode:0,反白显示;1,正常显示                             
 225          //size:选择字体 16/12 
 226          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 227          {       
 228   1              unsigned char c=0,i=0;  
 229   1                      c=chr-' ';//得到偏移后的值                      
 230   1                      if(x>Max_Column-1){x=0;y=y+2;}
 231   1                      if(Char_Size ==16)
 232   1                              {
 233   2                              OLED_Set_Pos(x,y);      
 234   2                              for(i=0;i<8;i++)
 235   2                              OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 236   2                              OLED_Set_Pos(x,y+1);
 237   2                              for(i=0;i<8;i++)
 238   2                              OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 239   2                              }
 240   1                              else {  
 241   2                                      OLED_Set_Pos(x,y);
C51 COMPILER V9.01   OLED                                                                  03/14/2017 14:55:49 PAGE 5   

 242   2                                      for(i=0;i<6;i++)
 243   2                                      OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 244   2                                      
 245   2                              }
 246   1      }
 247          //m^n函数
 248          u32 oled_pow(u8 m,u8 n)
 249          {
 250   1              u32 result=1;    
 251   1              while(n--)result*=m;    
 252   1              return result;
 253   1      }                                 
 254          //显示2个数字
 255          //x,y :起点坐标  
 256          //len :数字的位数
 257          //size:字体大小
 258          //mode:模式     0,填充模式;1,叠加模式
 259          //num:数值(0~4294967295);                         
 260          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 261          {               
 262   1              u8 t,temp;
 263   1              u8 enshow=0;                                               
 264   1              for(t=0;t<len;t++)
 265   1              {
 266   2                      temp=(num/oled_pow(10,len-t-1))%10;
 267   2                      if(enshow==0&&t<(len-1))
 268   2                      {
 269   3                              if(temp==0)
 270   3                              {
 271   4                                      OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 272   4                                      continue;
 273   4                              }else enshow=1; 
 274   3                               
 275   3                      }
 276   2                      OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 277   2              }
 278   1      } 
 279          //显示一个字符号串
 280          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 281          {
 282   1              unsigned char j=0;
 283   1              while (chr[j]!='\0')
 284   1              {               OLED_ShowChar(x,y,chr[j],Char_Size);
 285   2                              x+=8;
 286   2                      if(x>120){x=0;y+=2;}
 287   2                              j++;
 288   2              }
 289   1      }
 290          //显示汉字
 291          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 292          {                           
 293   1              u8 t,adder=0;
 294   1              OLED_Set_Pos(x,y);      
 295   1          for(t=0;t<16;t++)
 296   1                      {
 297   2                                      OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 298   2                                      adder+=1;
 299   2           }  
 300   1                      OLED_Set_Pos(x,y+1);    
 301   1          for(t=0;t<16;t++)
 302   1                              {       
 303   2                                      OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
C51 COMPILER V9.01   OLED                                                                  03/14/2017 14:55:49 PAGE 6   

 304   2                                      adder+=1;
 305   2            }                                 
 306   1      }
 307          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 308          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 309          {       
 310   1       unsigned int j=0;
 311   1       unsigned char x,y;
 312   1        
 313   1        if(y1%8==0) y=y1/8;      
 314   1        else y=y1/8+1;
 315   1              for(y=y0;y<y1;y++)
 316   1              {
 317   2                      OLED_Set_Pos(x0,y);
 318   2          for(x=x0;x<x1;x++)
 319   2                  {      
 320   3                      OLED_WR_Byte(BMP[j++],OLED_DATA);               
 321   3                  }
 322   2              }
 323   1      } 
 324          
 325          //初始化SSD1306                                     
 326          void OLED_Init(void)
 327          {       
 328   1       
 329   1      OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 330   1              OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 331   1              OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 332   1              OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 333   1              OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 334   1              OLED_WR_Byte(0x81,OLED_CMD); // contract control
 335   1              OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 336   1              OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 337   1              OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 338   1              OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 339   1              OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 340   1              OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 341   1              OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 342   1              OLED_WR_Byte(0x00,OLED_CMD);//
 343   1              
 344   1              OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 345   1              OLED_WR_Byte(0x80,OLED_CMD);//
 346   1              
 347   1              OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 348   1              OLED_WR_Byte(0x05,OLED_CMD);//
 349   1              
 350   1              OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 351   1              OLED_WR_Byte(0xF1,OLED_CMD);//
 352   1              
 353   1              OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 354   1              OLED_WR_Byte(0x12,OLED_CMD);//
 355   1              
 356   1              OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 357   1              OLED_WR_Byte(0x30,OLED_CMD);//
 358   1              
 359   1              OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 360   1              OLED_WR_Byte(0x14,OLED_CMD);//
 361   1              
 362   1              OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 363   1      }  
C51 COMPILER V9.01   OLED                                                                  03/14/2017 14:55:49 PAGE 7   

 364          
 365          
 366          
 367          
 368          
 369          
 370          
 371          
 372          
 373          
 374          
 375          
 376          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1221    ----
   CONSTANT SIZE    =   2520    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
